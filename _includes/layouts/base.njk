<!doctype html>
<html {% if section %} data-current="{{ section }}"{% endif %} lang="en">
	{% include "components/head.njk" %}
	<body data-barba="wrapper">
     		<div class="smooth-scroll">
		<header>
			<h1 style="font-family: 'Open Sans Condensed', sans-serif; margin: 0 1rem; 
">
				<a class= "gradient-text" href="{{ '/' | url }}">Porto Relocation Services</a>
			</h1>
			{% include "components/nav.njk" %}
		</header>
		<main data-barba="container" data-barba-namespace="home">				
			{{ layoutContent | safe }}
		</main>	
			{% include "components/footer.njk" %}
		</div> 
	</body>
</html>

<script>
gsap.registerPlugin(ScrollTrigger);

 const locoScroll = new LocomotiveScroll({
  el: document.querySelector(".smooth-scroll"),
  smooth: true
});

locoScroll.on("scroll", ScrollTrigger.update);


ScrollTrigger.scrollerProxy(".smooth-scroll", {
  scrollTop(value) {
    return arguments.length
      ? locoScroll.scrollTo(value, 0, 0)
      : locoScroll.scroll.instance.scroll.y;
  }, 
  getBoundingClientRect() {
    return {
      top: 0,
      left: 0,
      width: window.innerWidth,
      height: window.innerHeight
    };
  },

  pinType: document.querySelector(".smooth-scroll").style.transform
    ? "transform"
    : "fixed"
});

let banners = document.querySelectorAll(".banner");

banners.forEach((element) => {
  let background = element.querySelector(".background");
  let headings = element.querySelectorAll("h1, h2");

  let tl = gsap
    .timeline()
    .from(background, {
      backgroundPosition: "60% 0%",
      filter: "brightness(0.1)",
      duration: 1
    })
    .from(headings, { y: 200, stagger: 0.1 }, 0);

  ScrollTrigger.create({
    trigger: element,
    scroller: ".smooth-scroll",
    start: "top 90%",
    toggleActions: "play none none reverse",
    animation: tl
  });
});
ScrollTrigger.addEventListener("refresh", () => locoScroll.update());
ScrollTrigger.refresh();
/*
const animationEnter = (container) => {

  return gsap.from(container, { autoAlpha: 0, duration: 2, clearProps:"all", ease:"none" });
  
}
const animationLeave = (container) => {
  return gsap.to(container, { autoAlpha: 0, duration: 2, clearProps:"all", ease:"none"  });
      		
}

barba.init({
  transitions: [
  	{
    		once({next}){
    			animationEnter(next.container);
    		},
    		leave:({current}) => animationLeave(current.container),
    		enter({next}){
    			
    			animationEnter(next.container);
    		}
  	}
  ]
}) 
*/
</script>
